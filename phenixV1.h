/*
 * Please do not edit this file.
 * It was generated using rpcgen.
 */

#ifndef _PHENIXV1_H_RPCGEN
#define _PHENIXV1_H_RPCGEN

#include <rpc/rpc.h>


#ifdef __cplusplus
extern "C" {
#endif


struct partenaire {
	char lieu[50];
	char nom[50];
	char secteur[50];
	struct note *notes;
};
typedef struct partenaire partenaire;

struct utilisateur {
	char adresse[50];
	char nom[40];
	char prenom[40];
	char mail[40];
	bool_t etat_compte;
};
typedef struct utilisateur utilisateur;

struct article {
	int num;
	int id_partenaire;
	char nom[40];
	int prix_unite;
};
typedef struct article article;

struct detail_commande {
	struct article article[20];
	int nb_arctile;
};
typedef struct detail_commande detail_commande;

struct commande {
	int num;
	int prix;
	struct utilisateur client;
	struct detail_commande detail;
	bool_t etat_commande;
};
typedef struct commande commande;

struct note {
	int note;
	char commentaire[500];
	struct commande commande_note;
};
typedef struct note note;

#define PHENIX_PROG 0x20000001
#define SCENARIO_1 1

#if defined(__STDC__) || defined(__cplusplus)
#define INSCRIRE 1
extern  struct utilisateur * inscrire_1(struct utilisateur *, CLIENT *);
extern  struct utilisateur * inscrire_1_svc(struct utilisateur *, struct svc_req *);
#define CREATIONPARTENAIRE 2
extern  struct partenaire * creationpartenaire_1(struct partenaire *, CLIENT *);
extern  struct partenaire * creationpartenaire_1_svc(struct partenaire *, struct svc_req *);
#define RECHERCHE 3
extern  struct partenaire * recherche_1(struct utilisateur *, CLIENT *);
extern  struct partenaire * recherche_1_svc(struct utilisateur *, struct svc_req *);
#define ACHAT 4
extern  struct commande * achat_1(struct detail_commande *, CLIENT *);
extern  struct commande * achat_1_svc(struct detail_commande *, struct svc_req *);
#define NOTATION 5
extern  struct note * notation_1(struct note *, CLIENT *);
extern  struct note * notation_1_svc(struct note *, struct svc_req *);
#define ANNULATION 6
extern  struct commande * annulation_1(struct commande *, CLIENT *);
extern  struct commande * annulation_1_svc(struct commande *, struct svc_req *);
#define REACTIVATION 7
extern  struct commande * reactivation_1(struct commande *, CLIENT *);
extern  struct commande * reactivation_1_svc(struct commande *, struct svc_req *);
#define HISTORIQUE 8
extern  void * historique_1(struct partenaire *, CLIENT *);
extern  void * historique_1_svc(struct partenaire *, struct svc_req *);
#define FINCOMMANDE 9
extern  struct commande * fincommande_1(int *, CLIENT *);
extern  struct commande * fincommande_1_svc(int *, struct svc_req *);
#define SUPPRIMERCOMPTE 10
extern  bool_t * supprimercompte_1(struct utilisateur *, CLIENT *);
extern  bool_t * supprimercompte_1_svc(struct utilisateur *, struct svc_req *);
#define DELETECOMMENT 11
extern  struct partenaire * deletecomment_1(struct partenaire *, CLIENT *);
extern  struct partenaire * deletecomment_1_svc(struct partenaire *, struct svc_req *);
#define MODIFICATIONCOORDONNEES 12
extern  struct partenaire * modificationcoordonnees_1(struct partenaire *, CLIENT *);
extern  struct partenaire * modificationcoordonnees_1_svc(struct partenaire *, struct svc_req *);
extern int phenix_prog_1_freeresult (SVCXPRT *, xdrproc_t, caddr_t);

#else /* K&R C */
#define INSCRIRE 1
extern  struct utilisateur * inscrire_1();
extern  struct utilisateur * inscrire_1_svc();
#define CREATIONPARTENAIRE 2
extern  struct partenaire * creationpartenaire_1();
extern  struct partenaire * creationpartenaire_1_svc();
#define RECHERCHE 3
extern  struct partenaire * recherche_1();
extern  struct partenaire * recherche_1_svc();
#define ACHAT 4
extern  struct commande * achat_1();
extern  struct commande * achat_1_svc();
#define NOTATION 5
extern  struct note * notation_1();
extern  struct note * notation_1_svc();
#define ANNULATION 6
extern  struct commande * annulation_1();
extern  struct commande * annulation_1_svc();
#define REACTIVATION 7
extern  struct commande * reactivation_1();
extern  struct commande * reactivation_1_svc();
#define HISTORIQUE 8
extern  void * historique_1();
extern  void * historique_1_svc();
#define FINCOMMANDE 9
extern  struct commande * fincommande_1();
extern  struct commande * fincommande_1_svc();
#define SUPPRIMERCOMPTE 10
extern  bool_t * supprimercompte_1();
extern  bool_t * supprimercompte_1_svc();
#define DELETECOMMENT 11
extern  struct partenaire * deletecomment_1();
extern  struct partenaire * deletecomment_1_svc();
#define MODIFICATIONCOORDONNEES 12
extern  struct partenaire * modificationcoordonnees_1();
extern  struct partenaire * modificationcoordonnees_1_svc();
extern int phenix_prog_1_freeresult ();
#endif /* K&R C */

/* the xdr functions */

#if defined(__STDC__) || defined(__cplusplus)
extern  bool_t xdr_partenaire (XDR *, partenaire*);
extern  bool_t xdr_utilisateur (XDR *, utilisateur*);
extern  bool_t xdr_article (XDR *, article*);
extern  bool_t xdr_detail_commande (XDR *, detail_commande*);
extern  bool_t xdr_commande (XDR *, commande*);
extern  bool_t xdr_note (XDR *, note*);

#else /* K&R C */
extern bool_t xdr_partenaire ();
extern bool_t xdr_utilisateur ();
extern bool_t xdr_article ();
extern bool_t xdr_detail_commande ();
extern bool_t xdr_commande ();
extern bool_t xdr_note ();

#endif /* K&R C */

#ifdef __cplusplus
}
#endif

#endif /* !_PHENIXV1_H_RPCGEN */
